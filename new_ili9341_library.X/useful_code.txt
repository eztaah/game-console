void e_draw_moving_rectangle(int16_t new_pos_x, int16_t new_pos_y, int16_t old_pos_x, int16_t old_pos_y,
                           int16_t width, int16_t height, uint16_t color, uint16_t background_color)
{
    // Calcul de la zone de chevauchement
    int left = old_pos_x;
    if (new_pos_x > left) left = new_pos_x;
    int right = old_pos_x + width;
    if (new_pos_x + width < right) right = new_pos_x + width;
    int top = old_pos_y;
    if (new_pos_y > top) top = new_pos_y;
    int bottom = old_pos_y + height;
    if (new_pos_y + height < bottom) bottom = new_pos_y + height;

    // Dessin des nouvelles zones
    if (new_pos_x < old_pos_x) {
        TFT_Box(e_safe_convert(new_pos_x, "0"), e_safe_convert(new_pos_y, "0"), e_safe_convert(old_pos_x, "0"), e_safe_convert(new_pos_y + height, "0"), color);
    }
    if (new_pos_x > old_pos_x) {
        TFT_Box(e_safe_convert(old_pos_x + width, "0"), e_safe_convert(new_pos_y, "0"), e_safe_convert(new_pos_x + width, "0"), e_safe_convert(new_pos_y + height, "0"), color);
    }
    if (new_pos_y < old_pos_y) {
        TFT_Box(e_safe_convert(new_pos_x, "0"), e_safe_convert(new_pos_y, "0"), e_safe_convert(new_pos_x + width, "0"), e_safe_convert(old_pos_y, "0"), color);
    }
    if (new_pos_y > old_pos_y) {
        TFT_Box(e_safe_convert(new_pos_x, "0"), e_safe_convert(old_pos_y + height, "0"), e_safe_convert(new_pos_x + width, "0"), e_safe_convert(new_pos_y + height, "0"), color);
    }

    // Nettoyage des anciennes zones
    if (old_pos_x < new_pos_x) {
        TFT_Box(e_safe_convert(old_pos_x, "0"), e_safe_convert(old_pos_y, "0"), e_safe_convert(new_pos_x, "0"), e_safe_convert(old_pos_y + height, "0"), background_color);
    }
    if (old_pos_x > new_pos_x) {
        TFT_Box(e_safe_convert(right, "0"), e_safe_convert(old_pos_y, "0"), e_safe_convert(old_pos_x + width, "0"), e_safe_convert(old_pos_y + height, "0"), background_color);
    }
    if (old_pos_y < new_pos_y) {
        TFT_Box(e_safe_convert(old_pos_x, "0"), e_safe_convert(old_pos_y, "0"), e_safe_convert(old_pos_x + width, "0"), e_safe_convert(new_pos_y, "0"), background_color);
    }
    if (old_pos_y > new_pos_y) {
        TFT_Box(e_safe_convert(old_pos_x, "0"), e_safe_convert(bottom, "0"), e_safe_convert(old_pos_x + width, "0"), e_safe_convert(old_pos_y + height, "0"), background_color);
    }
}


---------------------------------------------

    while(1) {
        int16_t variable1 = PORTBbits.RB0;
        if (e_is_button_pressed(BUTTON_UP)) {
            e_fill_screen(BLUE);
        }
        else if (e_is_button_pressed(BUTTON_DOWN)) {
            e_fill_screen(GREEN);
        }
        else if (e_is_button_pressed(BUTTON_RIGHT)) {
            e_fill_screen(MAGENTA);
        }
        else if (e_is_button_pressed(BUTTON_LEFT)) {
            e_fill_screen(BROWN);
        }
        else if (e_is_button_pressed(BUTTON_A)) {
            e_fill_screen(RED);
        }
        else if (e_is_button_pressed(BUTTON_B)) {
            e_fill_screen(LIGHTBLUE);
        }
        else if (e_is_button_pressed(BUTTON_HOME)) {
            e_fill_screen(CYAN);
        }
        else {
            e_fill_screen(BLACK);
        }
    }



-----------------------------------------

void play_tetris(void){
    e_play_E4(400);
    e_play_B3(200);
    e_play_C4(200);
    e_play_D4(400);
    e_play_C4(200);
    e_play_B3(200);
    e_play_A3(400);
    e_play_A3(200);
    _e_stop_buzzer();
    e_play_C4(200);
    e_play_E4(400);
    _e_stop_buzzer();
}